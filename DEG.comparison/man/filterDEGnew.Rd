\name{filterDEGnew}
\alias{filterDEGnew}
\title{
Filter and plot DEG results
}
\description{
Function adapted from systemPipeR.
Filters and plots DEG results for a given set of sample comparisons. The gene idenifiers of all (i) Up_or_Down, (ii) Up and (iii) Down regulated genes are stored as separate list components and the corresponding summary statistics, stored in a fourth list component, is plotted in form of a stacked bar plot.
}
\usage{
filterDEGnew(degDF, filter, plot = TRUE, method)
}
\arguments{
  \item{degDF}{
  \code{data.frame} generated by \code{run_edgeR}
}
  \item{filter}{
  Named vector with filter cutoffs of format \code{c(Fold=2, FDR=1)} where \code{Fold} refers to the fold change cutoff (unlogged) and \code{FDR} to the p-value cutoff.
}
  \item{plot}{
	Allows to turn plotting behavior on and off with default set to \code{TRUE}. 
}
 \item{method}{
  Defines the method name in the plot.
}
}
\value{
Returns \code{list} with four components
  \item{UporDown}{List of up or down regulated gene/transcript indentifiers meeting the chosen filter settings for all comparisons defined in data frames \code{pval} and \code{log2FC}.}
  \item{Up}{Same as above but only for up regulated genes/transcript.}
  \item{Down}{Same as above but only for down regulated genes/transcript.}
}
\references{
Thomas Girke (2015). systemPipeR: systemPipeR: NGS workflow and report generation environment. R package version 1.0.12.
https://github.com/tgirke/systemPipeR
}
\author{
Daniela Cassol
}
\seealso{
\code{run_edgeR, run_DESeq2, run_NBPSeq_glm, run_NBPSeq_nbp, run_TSPM}
}
\examples{
targetspath <- system.file("extdata", "targets.txt", package="DEG.comparison")
targets <- read.delim(targetspath, comment="#")
cmp <- readComp(file=targetspath, format="matrix", delim="-")
countDFeByg <- system.file("extdata", "countDFeByg.xls", package="DEG.comparison")
countDFeByg <- read.delim(countDFeByg, row.names=1)
Comp3 <- list(AP1.4_AP1.67=c("AP1.4A","AP1.4B", "AP1.67A", "AP1.67B"), AP3.4_AP3.67=c("AP3.4A","AP3.4B", "AP3.67A" ,"AP3.67B"), AG.4_AG.67=c("AG.4A", "AG.4B", "AG.67A","AG.67B"))
edgeDF <- run_edgeR(countDF=countDFeByg, targets=targets, cmp=cmp[[1]], independent=FALSE, mdsplot="")
DEG_list_edgeR <- filterDEGnew(degDF=edgeDF, filter=c(Fold=2, FDR=1), method="edgeR")
DEG_list_edgeR$Summary[1:4,]
}
\keyword{run_DEGs}
